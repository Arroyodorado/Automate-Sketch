
    // log(MSApplicationMetadata.metadata());
    var sketchMetaData = [
        {
            "appVersion": "43",
            "build": "38999",
            "version": "88",
            "commit": "8533cf0311420996142d259236c1d7bd484f48c8"
        },
        {
            "appVersion": "43.1",
            "build": "39012",
            "version": "88",
            "commit": "335a30073fcb2dc64a0abd6148ae147d694c887d"
        },
        {
            "appVersion": "43.2",
            "build": "39069",
            "version": "88",
            "commit": "2ac3f43dc64a2b7982dc85b584be457e7bbba129"
        },
        {
            "appVersion": "44",
            "build": "41411",
            "version": "91",
            "commit": "149712aeb51bf07cefb5bb6d603b26c4dccfff9d"
        },
        {
            "appVersion": "44.1",
            "build": "41455",
            "version": "91",
            "commit": "10b2b021ddaac63eb3f52ce0b42edfb625ca194b"
        },
        {
            "appVersion": "45",
            "build": "43475",
            "version": "92",
            "commit": "62a429066b6505d0a6a211f8b74e8c5a38b40e00"
        },
        {
            "appVersion": "45.1",
            "build": "43504",
            "version": "92",
            "commit": "50f81cddca44938a07151f71e393545983779bf1"
        }
    ];

    // Choose a sketch file
    var chooseFile = NSOpenPanel.openPanel();
        chooseFile.setCanChooseDirectories(false);
        chooseFile.setCanChooseFiles(true);
        chooseFile.setAllowedFileTypes(["sketch"]);

    if (chooseFile.runModal() == NSOKButton) {

        // Dialog

    }


    var shellFilePath = context.plugin.urlForResourceNamed("Convert_Sketch_File_to_Other_Version.py").path();
    var path = "";
        runCommand("/usr/bin/python", ["Resources/hello.py"], function(status, msg) {
            if (status && msg != "") {
                path += msg;
    //             path = path.replace(/\s*$/g, "");
            }
        });
    log(path);


function runCommand(command, args, callback) {
    var task = NSTask.alloc().init();
    var pipe = NSPipe.pipe();
    var errPipe = NSPipe.pipe();
        task.launchPath = command;
        task.arguments = args;
        task.standardOutput = pipe;
        task.standardError = errPipe;
        task.launch();
    var errorData = errPipe.fileHandleForReading().readDataToEndOfFile();
    if (errorData != nil && errorData.length()) {
        var message = NSString.alloc().initWithData_encoding_(errorData, NSUTF8StringEncoding);
        if (callback && typeof(callback) == "function") {
            callback(
                task.terminationStatus() == 0,
                message
            );
            return;
        } else {
            return NSException.raise_format_("failed", message);
        }
    }
    var data = pipe.fileHandleForReading().readDataToEndOfFile();
    if (callback && typeof(callback) == "function") {
        callback(
            task.terminationStatus() == 0,
            NSString.alloc().initWithData_encoding_(data, NSUTF8StringEncoding)
        );
    }
}
