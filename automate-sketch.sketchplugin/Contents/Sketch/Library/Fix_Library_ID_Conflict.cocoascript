@import "../Libraries/Google_Analytics.cocoascript";

var onRun = function(context) {

    var document = context.document;

    // Library list
    var assetLibraryController = AppController.sharedInstance().librariesController();
    var libraries = assetLibraryController.libraries();

    if (libraries.count() == 0) {
        document.showMessage("You have not any user library.");
        return;
    }

    // Dialog
    var viewWidth = 550,
        viewHeight = 400,
        padding = 10,
        previewImageWidth = 100,
        previewImageHeight = 80;

    var dialog = NSAlert.alloc().init();
    dialog.setMessageText("Fix Library ID Conflict");
    dialog.setInformativeText("Change the library ID, will cause symbol's auto update broken.");
    dialog.addButtonWithTitle("Close");

    var accessoryView = NSView.alloc().init();
    accessoryView.setFlipped(true);
    accessoryView.setFrame(NSMakeRect(0, 0, viewWidth, viewHeight));

    var scrollView = NSScrollView.alloc().initWithFrame(NSMakeRect(0, 0, viewWidth, viewHeight));
    scrollView.setHasVerticalScroller(true);
    scrollView.setBorderType(NSBezelBorder);
    accessoryView.addSubview(scrollView);

    var contentView = NSView.alloc().initWithFrame(NSMakeRect(0, 0, viewWidth, libraries.count() * (previewImageHeight + padding * 2) + 10));
    contentView.setFlipped(true);

    // Sort by library ID
    var librariesCopy = libraries.mutableCopy();
    var sortByID = NSSortDescriptor.sortDescriptorWithKey_ascending("libraryID", true);
    librariesCopy.sortUsingDescriptors(NSArray.arrayWithObject(sortByID));

    var loopLibraries = librariesCopy.objectEnumerator();
    var library;
    var i = 0;
    while (library = loopLibraries.nextObject()) {

        // List
        var itemHeight = previewImageHeight + padding * 2;
        var itemView = NSView.alloc().initWithFrame(NSMakeRect(0, itemHeight * i, viewWidth, itemHeight));
        itemView.setFlipped(true);

        // Preview image
        var imageView = NSView.alloc().initWithFrame(NSMakeRect(padding, padding, previewImageWidth, previewImageHeight));
        imageView.setWantsLayer(true);
        imageView.setCornerRadius(3);
        imageView.layer().setBackgroundColor(CGColorCreateGenericRGB(1, 1, 1, 1));
        imageView.layer().setBorderWidth(1);
        imageView.layer().setBorderColor(CGColorCreateGenericRGB(0, 0, 0, 0.05));
        var imageSrc = NSImageView.alloc().initWithFrame(NSMakeRect(0, 0, previewImageWidth, previewImageHeight));
        var document = MSDocumentReader.readerForDocumentAtURL(library.locationOnDisk());
        var image = document.libraryPreviewImage();
        imageSrc.setImage(image);
        imageView.addSubview(imageSrc);
        itemView.addSubview(imageView);

        // Title
        var titleView = NSTextField.alloc().initWithFrame(NSMakeRect(previewImageWidth + padding * 2, 20, viewWidth - previewImageWidth - 100 + padding * 3, 20));
        titleView.setStringValue(library.name());
        if (!library.enabled()) {
            titleView.setStringValue(library.name() + " ðŸ™ˆ");
        }
        titleView.setFont(NSFont.boldSystemFontOfSize(14));
        titleView.setTextColor(NSColor.blackColor());
        titleView.setBezeled(false);
        titleView.setDrawsBackground(false);
        titleView.setEditable(false);
        titleView.setSelectable(false);
        itemView.addSubview(titleView);

        // Library ID
        var idView = NSTextField.alloc().initWithFrame(NSMakeRect(previewImageWidth + padding * 2, 40, viewWidth - previewImageWidth - 100 + padding * 3, 20));
        idView.setStringValue(library.libraryID());
        idView.setFont(NSFont.monospacedDigitSystemFontOfSize_weight(12, NSFontWeightRegular));
        idView.setTextColor(NSColor.blackColor());
        idView.setBezeled(false);
        idView.setDrawsBackground(false);
        idView.setEditable(false);
        idView.setSelectable(false);
        itemView.addSubview(idView);

        // Library URL
        var locationView = NSTextField.alloc().initWithFrame(NSMakeRect(previewImageWidth + padding * 2, 60, viewWidth - previewImageWidth - 100 + padding * 3, 20));
        // libraryType 0 : Internal Library
        // libraryType 1 : User Library
        if (library.libraryType() == 0) {
            locationView.setStringValue("Internal Library");
        } else {
            var filePath = library.locationOnDisk().path().replace(NSHomeDirectory(), "~");
            locationView.setStringValue(filePath);
        }
        locationView.setFont(NSFont.systemFontOfSize(12));
        locationView.setTextColor(NSColor.grayColor());
        locationView.setBezeled(false);
        locationView.setDrawsBackground(false);
        locationView.setEditable(false);
        locationView.setSelectable(false);
        itemView.addSubview(locationView);

        // Button
        if (library.libraryType() == 1) {
            var changeButton = NSButton.alloc().initWithFrame(NSMakeRect(viewWidth - 100, 35, 90, 30));
            changeButton.setBezelStyle(NSRoundedBezelStyle);
            changeButton.setTitle("Change ID");
            changeButton.setCOSJSTargetFunction(function(sender) {
                var idView = sender.superview().subviews().objectAtIndex(2);
                var targetLibraryPath = sender.superview().subviews().objectAtIndex(3).stringValue();
                targetLibraryPath = targetLibraryPath.replace(/^~/, NSHomeDirectory());
                var newID = changeDocumentID(context, targetLibraryPath);
                idView.setStringValue(newID);
            });
            itemView.addSubview(changeButton);
        }

        var divider = NSView.alloc().initWithFrame(NSMakeRect(0, itemHeight - 1, viewWidth, 1));
        divider.setWantsLayer(true);
        divider.layer().setBackgroundColor(CGColorCreateGenericRGB(0, 0, 0, 0.1));
        itemView.addSubview(divider);

        contentView.addSubview(itemView);

        i ++;
    }

    scrollView.setDocumentView(contentView);

    dialog.setAccessoryView(accessoryView);
    return dialog.runModal();

};

function changeDocumentID(context, documentPath) {
    var newDocument = MSDocument.alloc().init();
    var fileURL = NSURL.fileURLWithPath(documentPath);
    var type = "com.bohemiancoding.sketch.drawing";
    newDocument.readFromURL_ofType_error(fileURL, type, nil);
    var newID = NSUUID.UUID().UUIDString();
    newDocument.documentData().setObjectID(newID);
    // Hack
    newDocument.addBlankPage();
    newDocument.removePage(newDocument.pages().lastObject());
    var writeToNewDocument = newDocument.writeToURL_ofType_forSaveOperation_originalContentsURL_error(fileURL, type, NSSaveOperation, nil, nil);
    if (writeToNewDocument) {
        return newID;
    } else {
        return nil;
    }
}
