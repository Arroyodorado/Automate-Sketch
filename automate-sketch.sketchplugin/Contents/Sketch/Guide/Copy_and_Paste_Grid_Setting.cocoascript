/*----------------------------------------------------------

Author: Ashung Hung
Homepage: https://github.com/Ashung/Automate-Sketch
License: https://creativecommons.org/licenses/by-sa/4.0

----------------------------------------------------------*/

@import "../Libraries/Preferences.cocoascript";
@import "../Libraries/Google_Analytics.cocoascript";

var copyGrid = function(context) {

    var document = context.document;
    var selection = context.selection;
    var page = document.currentPage();

    var gridSetting = {};

    if (selection.count() > 0) {

        // Get grid setting of first layer
        var layer = selection.firstObject();
        if (layer.class() == "MSArtboardGroup" || layer.class() == "MSSymbolMaster") {

            if (layer.grid()) {
                gridSetting.girdSize = layer.grid().gridSize();
                gridSetting.thickGridTimes = layer.grid().thickGridTimes();
                gridSetting.isEnabled = layer.grid().isEnabled();
            } else {
                document.showMessage("There is not grid setting in \"" + layer.name() + "\".");
                return;
            }

        } else {
            document.showMessage("The layer \"" + layer.name() + "\" is not a artboard.");
            return;
        }

    } else {

        // Get grid setting of page
        if (page.grid()) {
            gridSetting.girdSize = page.grid().gridSize();
            gridSetting.thickGridTimes = page.grid().thickGridTimes();
            gridSetting.isEnabled = page.grid().isEnabled();
        } else {
            document.showMessage("There is not grid setting in \"" + page.name() + "\".");
            return;
        }

    }

    if (Object.keys(gridSetting).length > 0) {
        log(JSON.stringify(gridSetting));
        copyStringToPasteboard(context, JSON.stringify(gridSetting));
    }

}




function copyStringToPasteboard(context, string) {
    var pasteboard = NSPasteboard.generalPasteboard();
    pasteboard.clearContents();
    pasteboard.setString_forType_(NSMutableString.stringWithString(string), NSPasteboardTypeString);
    context.document.showMessage("The grid setting has copied.");
}

function getStringFromPasteboard(context) {
    var pasteboard = NSPasteboard.generalPasteboard();
    var pasteboardItems = pasteboard.pasteboardItems();
    if (pasteboardItems.count() > 0) {
        var string = pasteboardItems.firstObject().stringForType(NSPasteboardTypeString);
        if (string) {
            return string;
        } else {
            context.document.showMessage("Pasteboard have not any strings.");
        }
    }
}
